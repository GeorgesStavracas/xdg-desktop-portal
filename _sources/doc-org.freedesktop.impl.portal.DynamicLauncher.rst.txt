.. _org.freedesktop.impl.portal.DynamicLauncher:

===========================================
org.freedesktop.impl.portal.DynamicLauncher
===========================================

-----------
Description
-----------

.. _org.freedesktop.impl.portal.DynamicLauncher Description:

Dynamic launcher portal backend interface

This documentation describes version 1 of this interface.



----------
Properties
----------

.. org.freedesktop.impl.portal.DynamicLauncher Properties:

org.freedesktop.impl.portal.DynamicLauncher:SupportedLauncherTypes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    SupportedLauncherTypes readable u


A bitmask of available launcher types. Currently defined types are:

<simplelist>
<member>1: Application. A launcher that represents an application.</member>
<member>2: Webapp. A launcher that represents a web app.</member>
</simplelist>




org.freedesktop.impl.portal.DynamicLauncher:version
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    version readable u




-------
Methods
-------

.. org.freedesktop.impl.portal.DynamicLauncher Methods:

org.freedesktop.impl.portal.DynamicLauncher.PrepareInstall
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    PrepareInstall (
      IN handle o,
      IN app_id s,
      IN parent_window s,
      IN name s,
      IN icon_v v,
      IN options a{sv},
      OUT response u,
      OUT results a{sv}
    )



Presents a dialog to the user to allow them to see the icon, potentially
change the name, and confirm installation of the launcher.

Supported keys in the ``options`` vardict:
<variablelist>
<varlistentry>
<term>modal b</term>
<listitem><para>
Whether to make the dialog modal. Defaults to yes.
</para></listitem>
</varlistentry>
<varlistentry>
<term>launcher_type u</term>
<listitem><para>
The type of launcher being created. For supported values see the
SupportedLauncherTypes property. Defaults to "Application".
</para></listitem>
</varlistentry>
<varlistentry>
<term>target s</term>
<listitem><para>
For a launcher of type "Webapp", this is the URL of the web app
being installed. This is displayed in the user-facing dialog.
For other launcher types, this is not needed.
</para></listitem>
</varlistentry>
<varlistentry>
<term>editable_name b</term>
<listitem><para>
If true, the user will be able to edit the name of the launcher.
Defaults to true.
</para></listitem>
</varlistentry>
<varlistentry>
<term>editable_icon b</term>
<listitem><para>
If true, the user will be able to edit the icon of the launcher,
if the implementation supports this. Defaults to false.
</para></listitem>
</varlistentry>
</variablelist>

The following results get returned via the ``results`` vardict:
<variablelist>
<varlistentry>
<term>name s</term>
<listitem><para>
The name chosen by the user for the launcher (or the default if
the editable_name option was false).
</para></listitem>
</varlistentry>
<varlistentry>
<term>icon v</term>
<listitem><para>
The icon chosen by the user for the launcher (or the default if
the editable_icon option was false).
</para></listitem>
</varlistentry>
</variablelist>



handle
  Object path for the `org.freedesktop.impl.portal.Request`_ object representing this call

app_id
  App id of the application

parent_window
  Identifier for the application window, see <link linkend="parent_window">Common Conventions</link>

name
  The default name for the launcher

icon_v
  A #GBytesIcon as returned by g_icon_serialize()

options
  Vardict with optional further information



org.freedesktop.impl.portal.DynamicLauncher.RequestInstallToken
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    RequestInstallToken (
      IN app_id s,
      IN options a{sv},
      OUT response u
    )




launcher installation, a nonzero number otherwise

The ``response`` returned by this method is used to determine whether to
give an install token to the caller, which can be used to avoid the need
for a confirmation dialog; the token can be passed to the
`org.freedesktop.portal.DynamicLauncher.Install`_ method just as if it
were acquired via the
`org.freedesktop.portal.DynamicLauncher.PrepareInstall`_ method.

It is up to the portal implementation to decide whether this method is
allowed based on the ``app_id`` of the caller.

The ``options`` vardict currently has no supported entries.



app_id
  App id of the application

options
  Vardict with optional further information


