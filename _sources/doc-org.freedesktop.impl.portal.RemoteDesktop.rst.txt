.. _org.freedesktop.impl.portal.RemoteDesktop:

=========================================
org.freedesktop.impl.portal.RemoteDesktop
=========================================

-----------
Description
-----------

.. _org.freedesktop.impl.portal.RemoteDesktop Description:

Remote desktop portal backend interface

The Remote desktop portal allows to create remote desktop sessions.

This documentation describes version 2 of this interface.



----------
Properties
----------

.. org.freedesktop.impl.portal.RemoteDesktop Properties:

org.freedesktop.impl.portal.RemoteDesktop:AvailableDeviceTypes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    AvailableDeviceTypes readable u


A bitmask of available source types. Currently defined types are:

<simplelist>
<member>1: KEYBOARD</member>
<member>2: POINTER</member>
<member>4: TOUCHSCREEN</member>
</simplelist>




org.freedesktop.impl.portal.RemoteDesktop:version
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    version readable u




-------
Methods
-------

.. org.freedesktop.impl.portal.RemoteDesktop Methods:

org.freedesktop.impl.portal.RemoteDesktop.CreateSession
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    CreateSession (
      IN handle o,
      IN session_handle o,
      IN app_id s,
      IN options a{sv},
      OUT response u,
      OUT results a{sv}
    )



Create a remote desktop session.

A remote desktop session is used to allow remote controlling a desktop
session. It can also be used together with a screen cast session (see
org.freedesktop.portal.ScreenCast), but may only be started and stopped
with this interface.

The following results get returned via the `org.freedesktop.portal.Request::Response`_ signal:
<variablelist>
<varlistentry>
<term>session s</term>
<listitem><para>
The session id. A string representing the created screen cast session.
</para></listitem>
</varlistentry>
</variablelist>



handle
  Object path for the `org.freedesktop.impl.portal.Request`_ object representing this call

session_handle
  

app_id
  App id of the application

options
  Vardict with optional further information



org.freedesktop.impl.portal.RemoteDesktop.SelectDevices
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    SelectDevices (
      IN handle o,
      IN session_handle o,
      IN app_id s,
      IN options a{sv},
      OUT response u,
      OUT results a{sv}
    )



Configure what the devices remote desktop session should expose.

Supported keys in the ``options`` vardict include:
<variablelist>
<varlistentry>
<term>types u</term>
<listitem><para>
Bitmask of what device types to request remote controlling of.
Default is all.
</para></listitem>
</varlistentry>
<varlistentry>
<term>restore_data (suv)</term>
<listitem><para>
The data to restore from a previous session.
</para>
<para>
If the stored session cannot be restored, this value is ignored
and the user will be prompted normally. This may happen when, for
example, the session contains a monitor or a window that is not
available anymore, or when the stored permissions are withdrawn.
</para>
<para>
The restore data is composed of the vendor name (e.g. "GNOME" or
"KDE"), the version of the implementation-specific private data,
and the implementation-specific private data itself.
</para>
<para>
This option was added in version 2 of this interface.
</para></listitem>
</varlistentry>
<varlistentry>
<term>persist_mode u</term>
<listitem><para>
How this session should persist. Default is 0. Accepted values are:
</para>
<para>
<simplelist>
<member>0: Do not persist (default)</member>
<member>1: Permissions persist as long as the application is running</member>
<member>2: Permissions persist until explicitly revoked</member>
</simplelist>
</para>
<para>
If the permission for the session to persist is granted, "restore_data"
will be returned via the `org.freedesktop.portal.Request::Response`_
signal of the `org.freedesktop.impl.portal.RemoteDesktop`_.Start method.
</para>
<para>
This option was added in version 2 of this interface.
</para></listitem>
</varlistentry>
</variablelist>

For available device types, see the AvailableDeviceTypes property.



handle
  Object path for the `org.freedesktop.impl.portal.Request`_ object representing this call

session_handle
  Object path for the `org.freedesktop.impl.portal.Session`_ object representing the session

app_id
  App id of the application

options
  Vardict with optional further information



org.freedesktop.impl.portal.RemoteDesktop.Start
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    Start (
      IN handle o,
      IN session_handle o,
      IN app_id s,
      IN parent_window s,
      IN options a{sv},
      OUT response u,
      OUT results a{sv}
    )



Start the remote desktop session. This will typically result the portal
presenting a dialog.

Supported keys in the ``options`` vardict include:
<variablelist>
<varlistentry>
<term>handle_token s</term>
<listitem><para>
A string that will be used as the last element of the ``handle``. Must be a valid
object path element. See the `org.freedesktop.portal.Request`_ documentation for
more information about the ``handle``.
</para></listitem>
</varlistentry>
</variablelist>

The following results get returned via the
`org.freedesktop.portal.Request::Response`_ signal:
<variablelist>
<varlistentry>
<term>devices u</term>
<listitem><para>
A bitmask of the devices selected by the user.
</para></listitem>
</varlistentry>
<varlistentry>
<term>clipboard_enabled b</term>
<listitem><para>
A boolean for whether the clipboard was enabled ('true') or not ('false').
See the `org.freedesktop.portal.Clipboard`_ documentation for more information.
Since version 2.
</para></listitem>
</varlistentry>
<varlistentry>
<term>streams a(ua{sv})</term>
<listitem><para>
Equivalent to the streams entry documented in
`org.freedesktop.impl.portal.ScreenCast`_.Start.
</para></listitem>
</varlistentry>
<varlistentry>
<term>devices u</term>
<listitem><para>
The device types that can be used for remote control. See the
AvailableDeviceTypes property.
</para></listitem>
</varlistentry>
</variablelist>



handle
  Object path for the `org.freedesktop.impl.portal.Request`_ object representing this call

session_handle
  

app_id
  App id of the application

parent_window
  Identifier for the application window

options
  Vardict with optional further information



org.freedesktop.impl.portal.RemoteDesktop.NotifyPointerMotion
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyPointerMotion (
      IN session_handle o,
      IN options a{sv},
      IN dx d,
      IN dy d
    )



Notify about a new relative pointer motion event. The (dx, dy) vector
represents the new pointer position in the streams logical coordinate
space.



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

dx
  Relative movement on the x axis

dy
  Relative movement on the y axis



org.freedesktop.impl.portal.RemoteDesktop.NotifyPointerMotionAbsolute
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyPointerMotionAbsolute (
      IN session_handle o,
      IN options a{sv},
      IN stream u,
      IN x d,
      IN y d
    )



Notify about a new absolute pointer motion event. The (x, y) position
represents the new pointer position in the streams logical coordinate
space (see the logical_size stream property in
`org.freedesktop.portal.ScreenCast`_).



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

stream
  The PipeWire stream node the coordinate is relative to

x
  Pointer motion x coordinate

y
  Pointer motion y coordinate



org.freedesktop.impl.portal.RemoteDesktop.NotifyPointerButton
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyPointerButton (
      IN session_handle o,
      IN options a{sv},
      IN button i,
      IN state u
    )



The pointer button is encoded according to Linux Evdev button codes.

May only be called if POINTER access was provided after starting the
session.

Available button states:
<simplelist>
<member>0: Released</member>
<member>1: Pressed</member>
</simplelist>



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

button
  The pointer button was pressed or released

state
  The new state of the button



org.freedesktop.impl.portal.RemoteDesktop.NotifyPointerAxis
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyPointerAxis (
      IN session_handle o,
      IN options a{sv},
      IN dx d,
      IN dy d
    )



The axis movement from a 'smooth scroll' device, such as a touchpad.
When applicable, the size of the motion delta should be equivalent to
the motion vector of a pointer motion done using the same advice.

May only be called if POINTER access was provided after starting the
session.

Supported keys in the ``options`` vardict include:
<variablelist>
<varlistentry>
<term>finish b</term>
<listitem><para>
If set to true, this is the last axis event in a series, for
example as a result of the fingers being lifted from a touchpad
after a two-finger scroll.  Default is false.
</para></listitem>
</varlistentry>
</variablelist>



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

dx
  Relative axis movement on the x axis

dy
  Relative axis movement on the y axis



org.freedesktop.impl.portal.RemoteDesktop.NotifyPointerAxisDiscrete
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyPointerAxisDiscrete (
      IN session_handle o,
      IN options a{sv},
      IN axis u,
      IN steps i
    )



May only be called if POINTER access was provided after starting the
session.

Available axes:
<simplelist>
<member>0: Vertical scroll</member>
<member>1: Horizontal scroll</member>
</simplelist>



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

axis
  The axis that was scrolled

steps
  The number of steps scrolled



org.freedesktop.impl.portal.RemoteDesktop.NotifyKeyboardKeycode
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyKeyboardKeycode (
      IN session_handle o,
      IN options a{sv},
      IN keycode i,
      IN state u
    )



May only be called if KEYBOARD access was provided after starting the
session.

Available keyboard keysym states:
<simplelist>
<member>0: Released</member>
<member>1: Pressed</member>
</simplelist>



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

keycode
  Keyboard code that was pressed or released

state
  New state of keyboard keysym



org.freedesktop.impl.portal.RemoteDesktop.NotifyKeyboardKeysym
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyKeyboardKeysym (
      IN session_handle o,
      IN options a{sv},
      IN keysym i,
      IN state u
    )



May only be called if KEYBOARD access was provided after starting the
session.

Available keyboard keysym states:
<simplelist>
<member>0: Released</member>
<member>1: Pressed</member>
</simplelist>



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

keysym
  Keyboard symbol that was pressed or released

state
  New state of keyboard keysym



org.freedesktop.impl.portal.RemoteDesktop.NotifyTouchDown
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyTouchDown (
      IN session_handle o,
      IN options a{sv},
      IN stream u,
      IN slot u,
      IN x d,
      IN y d
    )



May only be called if TOUCHSCREEN access was provided after starting the
session.

Notify about a new touch down event. The (x, y) position
represents the new touch point position in the streams logical
coordinate space (see the logical_size stream property in
`org.freedesktop.portal.ScreenCast`_).



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

stream
  The PipeWire stream node the coordinate is relative to

slot
  Touch slot where touch point appeared

x
  Touch down x coordinate

y
  Touch down y coordinate



org.freedesktop.impl.portal.RemoteDesktop.NotifyTouchMotion
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyTouchMotion (
      IN session_handle o,
      IN options a{sv},
      IN stream u,
      IN slot u,
      IN x d,
      IN y d
    )



May only be called if TOUCHSCREEN access was provided after starting the
session.

Notify about a new touch motion event. The (x, y) position
represents where the touch point position in the streams logical
coordinate space moved (see the logical_size stream property in
`org.freedesktop.portal.ScreenCast`_).



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

stream
  The PipeWire stream node the coordinate is relative to

slot
  Touch slot where touch point appeared

x
  Touch motion x coordinate

y
  Touch motion y coordinate



org.freedesktop.impl.portal.RemoteDesktop.NotifyTouchUp
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    NotifyTouchUp (
      IN session_handle o,
      IN options a{sv},
      IN slot u
    )



May only be called if TOUCHSCREEN access was provided after starting the
session.

Notify about a new touch up event.



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

options
  Vardict with optional further information

slot
  Touch slot where touch point appeared



org.freedesktop.impl.portal.RemoteDesktop.ConnectToEIS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    ConnectToEIS (
      IN session_handle o,
      IN app_id s,
      IN options a{sv},
      OUT fd h
    )




sender libei context

Request a connection to an EIS implementation.

This method is available in version 2 of this interface.



session_handle
  Object path for the `org.freedesktop.portal.Session`_ object

app_id
  App id of the application

options
  Vardict with optional further information


